@model IEnumerable<GlobalImpact.Models.RecyclingBin>

@using GlobalImpact.Services
@inject GoogleMapsApiKeyService GoogleMapsApiKeyService

@{
    ViewData["Title"] = "Ecos";
}

<h1>Ecos</h1>

<div class="row">
    <div class="col-md-6">
        <h1>Ecos</h1>
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Capacity)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CurrentCapacity)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Status)
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Capacity)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => Math.Round(item.CurrentCapacity,2))
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Status)
                        </td>
                        <td>
                            <button class="btn btn-primary" onclick="showRouteToBin('@item.Latitude', '@item.Longitude')">Rota</button>
                        </td>

                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="col-md-6">
        <h1>Localização Atual</h1>
        <div id="map" style="width: 500px; height: 300px; margin: 0 auto;"></div>
    </div>
</div>

@section Scripts {
    <script>
        let map;

        function initMap() {
            map = new google.maps.Map(document.getElementById("map"), {
                center: { lat: -34.397, lng: 150.644 }, // Coordenadas padrão (Sydney, Austrália)
                zoom: 8, // Nível de zoom padrão
            });

            // Obtém a localização do usuário assim que a página é carregada
            getLocation();

            // Adicionar marcadores para os ecopontos
            addEcopontosMarkers();

        }

        function getLocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(showPosition);
            } else {
                alert("Geolocalização não é suportada pelo seu navegador.");
            }
        }

        function showPosition(position) {
            const userLatLng = {
                lat: position.coords.latitude,
                lng: position.coords.longitude
            };

            map.setCenter(userLatLng); // Define o centro do mapa na localização do usuário
            map.setZoom(15); // Ajusta o zoom para um nível mais detalhado


            // Adiciona um marcador na localização do usuário
            new google.maps.Marker({
                position: userLatLng,
                map: map,
                title: "Sua Localização"
            });

        }

        function showRouteToBin(binLat, binLng) {

            const userLatLng = map.getCenter(); // Obtém a localização do usuário

            const directionsService = new google.maps.DirectionsService();
            const directionsRenderer = new google.maps.DirectionsRenderer();

            // Limpa todas as sobreposições, incluindo rotas anteriores
            directionsRenderer.setMap(null);

            directionsRenderer.setMap(map);

            const request = {
                origin: userLatLng,
                destination: { lat: parseFloat(binLat), lng: parseFloat(binLng) },
                travelMode: google.maps.TravelMode.DRIVING
            };

            directionsService.route(request, function (response, status) {
                if (status === google.maps.DirectionsStatus.OK) {
                    directionsRenderer.setDirections(response);
                } else {
                    window.alert('Não foi possível encontrar uma rota para este ecoponto.');
                }
            });
        }

        function addEcopontosMarkers() {
            // Suponha que você tenha as coordenadas de latitude e longitude dos ecopontos em uma variável chamada 'ecopontos'
            const ecopontos = [
                { lat: 38.522, lng: -8.839 },
                { lat: -34.45, lng: 150.68 },
                // Adicione mais coordenadas de ecopontos conforme necessário
            ];

            // Adicione marcadores para cada ecoponto
            ecopontos.forEach(ecoponto => {
                new google.maps.Marker({
                    position: ecoponto,
                    map: map,
                    title: "Ecoponto"
                });
            });
        }


        
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=@GoogleMapsApiKeyService.GetApiKey()&callback=initMap" async defer></script>
}