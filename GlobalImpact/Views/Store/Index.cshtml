@using System.Runtime.InteropServices.JavaScript
@using Microsoft.AspNetCore.Razor.Language.Extensions
@model IEnumerable<GlobalImpact.Models.Product>

@{
	ViewData["Title"] = "Index";
	Dictionary<Guid, int> cart = new Dictionary<Guid, int>();
}

@if (User.Identity.IsAuthenticated)
{
	@if (User.IsInRole("client") || User.IsInRole("admin"))
	{
		<div class="modal-backdrop"></div>

		<section class="store">
			<section class="top-main">
				<h1 class="page-name">STORE</h1>
				<div class="sort-filter-buttons">
					<div class="sort-button">
						<button id="sortButton">SORT</button>
					</div>
					<div class="filter-button">
						<button id="filterButton">FILTER</button>
					</div>
				</div>
			</section>

			<section class="products">
				@if (Model != null)
				{
					@foreach (var item in Model)
					{
						<div class="product">
							<div class="product-img-imfo">
								<div class="product-img">
									<img src="/img/products/@item.ImageUrl" alt="Product">
								</div>
								<div class="product-info">
									<h5>@Html.DisplayFor(modelItem => item.Name)</h5>
									<p>@Html.DisplayFor(modelItem => item.Description)</p>
								</div>
							</div>

							<div class="points-add">
								<h5>@Html.DisplayFor(modelItem => item.Points) P</h5>
								<a asp-action="Add" asp-route-id="@item.Id">
									<img src="/add-cart.png" alt="Product">
								</a>
							</div>
						</div>
					}
				}
			</section>
		</section>

		<section id="filter" class="filter">
			<form method="post" asp-controller="Store" asp-action="Filtra">
				<h1 class="page-name">FILTER</h1>
				<div class="form-fields">
					<div class="form-group">
						<select class="form-control" id="categoria" name="categoria">
							<option value="" disabled selected>Select a category...</option>
							@foreach (var category in ViewBag.Categorias)
							{
								<option value="@category.Value">@category.Text</option>
							}
						</select>
					</div>
					<div class="form-group">
						<input type="text" class="form-control" id="nome" name="nome" placeholder="Name">
					</div>

					<div class="points-max-min">
						<h6>Points</h6>
						<div class="min-max">
							<div class="form-group">
								<input type="number" class="form-control" id="minp" name="minp" placeholder="MIN">
							</div>
							<div class="form-group">
								<input type="number" class="form-control" id="maxp" name="maxp" placeholder="MAX">
							</div>
						</div>
					</div>
					<div class="text-center">
						<button type="submit" class="btn-grad">Filter</button>
					</div>
				</div>
			</form>
		</section>

		<section id="sort" class="sort">
			<form method="post" asp-controller="Store" asp-action="Order">
				<h1 class="page-name">SORT</h1>
				<div class="form-group">
					<select class="form-control" id="orderList" name="orderList" style="width: 200px;">
						<option value="" disabled selected>Select sort...</option>
						@foreach (var order in ViewBag.Order)
						{
							<option value="@order.Value">@order.Text</option>
						}
					</select>
				</div>
				<div class="text-center">
					<button type="submit" class="btn-grad">Sort</button>
				</div>
			</form>
		</section>







		<div class="container mt-3 ml-3" style="display: ;">
			<div class="row">
				<div class="col-md-3">

					@if (ViewBag.Items != null)
					{

						<div class="row">
							<div class="col-md-3">
								<div class="sidebar-header d-flex justify-content-between align-items-center">
									<h3>Carrinho</h3>
									<div class="button-container">
										<a class="btn btn-primary" asp-action="Checkout" asp-route-items="@ViewBag.Items">Checkout</a>
									</div>
									<div class="button-container">
										<a class="btn btn-secondary ml-2" asp-action="DeleteAllFromCart">Clear</a>
									</div>

								</div>
							</div>
						</div>
						<br />
						<ul class="list-group">
							@foreach (var item in ViewBag.Items)
							{
								<li class="list-group-item d-flex justify-content-between align-items-center">
									<div>
										<h6>@item.Name</h6>
										<p>@item.Points GIcoins</p>
									</div>
									<div class="input-group" style="width: 120px;">
										<input id="@item.Id" type="number" value="@item.Quantity" min="1" class="form-control rounded-3">
										<div class="input-group-append">
											<a class="btn btn-danger remove-btn" asp-controller="Store" asp-action="DeleteFromCart" asp-route-id="@item.Id">X</a>
										</div>
									</div>
								</li>
							}
						</ul>
					}
				</div>
			</div>
		</div>
	}
}

@foreach (var item in ViewBag.Items)
{
	cart.Add(item.Id, item.Quantity);
}

<script type="text/javascript" src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
	let model = @Html.Raw(Json.Serialize(cart));

	console.log(model);

	for (let key in model) {
		document.getElementById(key).addEventListener("input", function () {
			let quantity = document.getElementById(key).value;
			updateQuantity(key, quantity);
		});
	}

	function updateQuantity(id, quantity) {
		$.ajax(
			{
				type: 'POST',
				dataType: 'JSON',
				url: '/Store/UpdateQuantity',
				data: { id: id, quantity: quantity },
				success:
					function (response) {
						// Generate HTML table.
						console.log("success");
					},
				error:
					function (response) {
						alert("Error: " + response);
					}
			});
	}
</script>

<script>
	document.addEventListener('DOMContentLoaded', function () {
		const filterButton = document.getElementById('filterButton');
		const sortButton = document.getElementById('sortButton');
		const backdrop = document.querySelector('.modal-backdrop');

		if (filterButton) {
			filterButton.addEventListener('click', () => toggleSection('filter'));
		}

		if (sortButton) {
			sortButton.addEventListener('click', () => toggleSection('sort'));
		}

		if (backdrop) {
			backdrop.addEventListener('click', () => {
				hideSection('filter');
				hideSection('sort');
				hideBackdrop();
			});
		}
	});

	function toggleSection(sectionId) {
		const section = document.getElementById(sectionId);
		if (section) {
			section.style.display = (section.style.display === 'block') ? 'none' : 'block';
			showBackdrop();
		}
	}

	function hideSection(sectionId) {
		const section = document.getElementById(sectionId);
		if (section) {
			section.style.display = 'none';
		}
	}

	function showBackdrop() {
		const backdrop = document.querySelector('.modal-backdrop');
		if (backdrop) {
			backdrop.style.display = 'block';
		}
	}

	function hideBackdrop() {
		const backdrop = document.querySelector('.modal-backdrop');
		if (backdrop) {
			backdrop.style.display = 'none';
		}
	}
</script>